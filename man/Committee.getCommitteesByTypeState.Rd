% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Committee.getCommitteesByTypeState.R
\name{Committee.getCommitteesByTypeState}
\alias{Committee.getCommitteesByTypeState}
\title{Get a list of committees according to type and state}
\usage{
Committee.getCommitteesByTypeState(typeId=list("H","S","J"), stateId="NA", all=FALSE)
}
\arguments{
\item{typeId}{(optional) a character string or list of character strings with the type ID(s) (default: All) (see references for details)}

\item{stateId}{(optional) a character string or list of character strings with the state ID(s) (default: "NA", for national) (see references for details)}

\item{all}{a logical indicator; if TRUE data on all possible combinations of the input variables are returned, if FALSE (default) only the exact combinations of them (see example)}
}
\value{
A data frame with a row for each committee and columns with the following variables describing the committee:\cr committees.committee*.committeeId,\cr committees.committee*.parentId,\cr committees.committee*.stateId,\cr committees.committee*.committeeTypeId,\cr committees.committee*.name.
}
\description{
This function is a wrapper for the Committee.getCommitteesByTypeState() method of the PVS API Committee class which returns a list of committees for each type in each requested state. The function sends a request with this method to the PVS API for all type and state IDs given as a function input, extracts the XML values from the returned XML file(s) and returns them arranged in one data frame.
}
\examples{
# First, make sure your personal PVS API key is saved as an option
# (options("pvs.key" = "yourkey")) or in the pvs.key variable:
\dontrun{pvs.key <- "yourkey"}
# get a data frame of committees according to all type/state combinations
\dontrun{committees <- Committee.getCommitteesByTypeState(typeId=list("H","S"),
stateId=list("NY","NJ"), all=TRUE)}
\dontrun{committees}
# get a data frame of committees according to the exact type/state combinations 
# (i.e., "H"/"NY", "S"/"NJ")
\dontrun{committees <- Committee.getCommitteesByTypeState(typeId=list("H","S"),
stateId=list("NY","NJ"), all=FALSE)}
\dontrun{committees}
}
\references{
http://api.votesmart.org/docs/Committee.html|cr
See http://api.votesmart.org/docs/semi-static.html for a list of committee-type ID(s).\cr
Use State.getStateIDs() to get a list of state IDs.\cr
See also: Matter U, Stutzer A (2015) pvsR: An Open Source Interface to Big Data on the American Political Sphere. PLoS ONE 10(7): e0130501. doi: 10.1371/journal.pone.0130501
}
\author{
Ulrich Matter <ulrich.matter-at-unibas.ch>
}
